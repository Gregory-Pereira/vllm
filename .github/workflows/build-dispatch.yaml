name: Build vLLM Wheel

on:
  workflow_dispatch:
    inputs:
      vllm_commit:
        description: 'vLLM commit hash to build'
        required: true

env:
  TF_VAR_aws_region: "eu-west-2"
  TF_VAR_aws_ami_name: '["*Ubuntu 24.04 LTS*"]'
  TF_VAR_aws_ami_owners: '["20250730"]'
  TF_VAR_aws_volume_size: 200
  TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
  TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
 
jobs:
  build-vllm-gpu-x86_64:
    if: github.event_name == 'workflow_dispatch'
    strategy:
      matrix:
        include:
          - arch: amd64
            aws_image_type: g6.4xlarge
            aws_ami_architecture: x86_64
          - arch: arm64
            aws_image_type: g5g.4xlarge
            aws_ami_architecture: arm64
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7
        with:
          path: main

      - name: Checkout terraform module
        id: checkout-module
        uses: actions/checkout@v4.1.7
        with:
          repository: containers/terraform-test-environment-module
          path: terraform-test-environment-module
          ref: 'main'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3.1.2
        with:
          terraform_version: "1.7.5"
          terraform_wrapper: false

      - name: Init
        run: terraform init
        working-directory: terraform-test-environment-module

      - name: Bootstrap
        id: up
        run: terraform apply -auto-approve -lock=false
        working-directory: terraform-test-environment-module
        env:
          TF_VAR_aws_instance_type: ${{ matrix.aws_image_type }}
          TF_VAR_aws_ami_architecture: ${{ matrix.aws_ami_architecture }}

      - name: Terraform Output
        id: terraform-output
        run: |
          echo "id=$(terraform output id | xargs)" >> $GITHUB_OUTPUT
          echo "url=$(terraform output host | xargs)" >> $GITHUB_OUTPUT
          echo "ssh_public_key=$(terraform output ssh_public_key | xargs)" >> $GITHUB_OUTPUT
          echo "pem_filename=$(terraform output pem_filename | xargs)" >> $GITHUB_OUTPUT
        working-directory: terraform-test-environment-module

      - name: Provision
        run: |
          ansible-playbook ./main/.github/workflows/playbooks/build-vllm.yml \
            -i terraform-test-environment-module/hosts.ini \
            --private-key=terraform-test-environment-module/${{ steps.terraform-output.outputs.pem_filename }} \
            --extra-vars "ssh_public_key='${{ steps.terraform-output.outputs.ssh_public_key }}'" \
            --extra-vars "python_version=3.9" \
            --extra-vars "vllm_commit='${{ github.event.inputs.vllm_commit}}"'

      - name: Destroy Test Environment
        id: down
        if: always()
        run: terraform destroy -auto-approve -lock=false
        working-directory: terraform-test-environment-module
        env:
          TF_VAR_aws_instance_type: ${{ matrix.aws_image_type }}
          TF_VAR_aws_ami_architecture: ${{ matrix.aws_ami_architecture }}
